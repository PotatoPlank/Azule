version: 2 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/php:7.1-node-browsers # ...with this image as the primary container; this is where all `steps` will run
    working_directory: ~/laravel # directory where steps will run
    steps: # a set of executable commands
    - checkout # special step to check out source code to working directory
#    - run: sudo apt install -y libsqlite3-dev zlib1g-dev
#    - run: sudo docker-php-ext-install zip
#    - run: sudo composer self-update
#    - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
#        keys:
#          - composer-v1-{{ checksum "composer.lock" }}
#          # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
#          - composer-v1-
#    - run: composer install -n --prefer-dist
#    - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
#        key: composer-v1-{{ checksum "composer.lock" }}
#        paths:
#          - vendor
#    - restore_cache: # special step to restore the dependency cache if `package-lock.json` does not change
#        keys:
#          - node-v1-{{ checksum "package-lock.json" }}
#          # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
#          - node-v1-
#    - run: yarn install
#    - save_cache: # special step to save the dependency cache with the `package-lock.json` cache key template
#        key: node-v1-{{ checksum "package-lock.json" }}
#        paths:
#          - node_modules
#    - run: touch storage/testing.sqlite
#    - run: php artisan migrate --env=testing --database=sqlite_testing --force
#    - run: ./vendor/bin/codecept build
#    - run: ./vendor/bin/codecept run
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Compress archive
          command: tar -czvf deploy.tar.gz ./*
      - add_ssh_keys:
          fingerprints:
            - "01:b2:16:10:b3:f2:a1:d9:c9:42:1d:f6:4d:ee:67:83"
      - run:
          name: Deploy Over SSH
          command: |
            scp -Brvvv deploy.tar.gz $SSH_USER@$SSH_HOST:/var/web/hosts/hamradiotime/htdocs/test-deploy/deploy.tar.gz
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build # only deploy once build job has completed
          filters:
            branches:
              only: master # only deploy on the master branch
